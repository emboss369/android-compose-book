@startuml
skinparam package {
  backgroundColor<<Repositories>> #F0F6D2
  backgroundColor<<Data Sources>> #DCEFFF
}

package "data" {

    package "Data Sources" <<Rectangle>> #DCEFFF{
        interface ItemDao {
            +getAllItems(): Flow<List<Item>>
            +getItem(id: Int): Flow<Item?>
            +insert(item: Item)
            +delete(item: Item)
            +update(item: Item)
        }

        class Item {
            +id: Int
            +name: String
            +done: Boolean
        }

        abstract class TodoDatabase {
            +itemDao(): ItemDao
        }
    }

    package "Repositories" <<Rectangle>> #F0F6D2{

        interface ItemsRepository {
            +getAllItemsStream(): Flow<List<Item>>
            +getItemStream(id: Int): Flow<Item?>
            +insertItem(item: Item)
            +deleteItem(item: Item)
            +updateItem(item: Item)
        }

        class DatabaseItemsRepository {
            -itemDao: ItemDao
            +getAllItemsStream(): Flow<List<Item>>
            +getItemStream(id: Int): Flow<Item?>
            +insertItem(item: Item)
            +deleteItem(item: Item)
            +updateItem(item: Item)
        }

        interface AppContainer {
            +itemsRepository: ItemsRepository
        }

        class AppDataContainer {
            -context: Context
            +itemsRepository: ItemsRepository
        }

    }
    DatabaseItemsRepository .|> ItemsRepository
    AppDataContainer .|> AppContainer
    AppDataContainer -- ItemsRepository: has >
    DatabaseItemsRepository - ItemDao : has >
    ItemDao ..> Item
    TodoDatabase -- ItemDao
    AppDataContainer - TodoDatabase : uses >

}
@enduml